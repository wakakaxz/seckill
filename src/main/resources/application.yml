spring:
  ## Thymeleaf 配置
  thymeleaf:
    # 关闭缓存
    cache: false

  ## 数据源配置
  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://10.1.1.128:3306/seckill?useSSL=false
      username: root
      password: secret
      # 初始连接数
      initial-size: 5
      # 最小空闲数量
      min-idle: 5
      # 最大连接数
      max-active: 10

  ## redis 配置
  redis:
    host: 10.1.1.128
    port: 6379
    password: secret
    database: 0
    # 连接超时时间
    timeout: 10000ms
    lettuce:
      pool:
        # 最大连接数
        max-active: 10
        # 最大连接阻塞时间, 默认 -1 一直等
        max-wait: 10000ms
        # 最小空闲连接, 默认 0
        min-idle: 3
        # 最大空闲连接, 默认 8
        max-idle: 8

  ## rabbitMQ 配置
  rabbitmq:
    # 主机地址
    host: 10.1.1.128
    port: 5672
    username: root
    password: secret
    # 虚拟主机, 本质上是一个独立的小型 RabbitMQ 服务器，拥有自己独立的队列、交换器及绑定关系等，井且它拥有自己独立的权限。
    # 它既能将同一个 RabbitMQ 中的众多客户区分开，又可以避免队列和交换器等命名冲突。
    virtual-host: /
    listener:
      simple:
        # 消费者最小数量
        concurrency: 10
        # 消费者最大数量
        max-concurrency: 10
        # 限制消费者每次只能处理 1 条信息, 处理完之后再继续下一条消息
        prefetch: 1
        # 启动时是否默认启动容器, 默认 true
        auto-startup: true
        # 消息被拒绝时是否重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        # 发布重试
        enabled: true
        # 重试时间默认 1000 ms
        initial-interval: 1000ms
        # 最大重试次数, 默认 3
        max-attempts: 3
        # 重试最大间隔时间, 默认 10000ms
        max-interval: 10000ms
        # 重试间隔乘数, 若配置 2.0, 表示第一次等 10 s, 第二次等 20 s, 第三次等 40 s
        multiplier: 1


### Mybatis-plus 配置
mybatis-plus:
  # 配置 Mapper.xml 文件
  mapper-locations: classpath:mybatis/mapper/*Mapper.xml
  # 配置 Mybatis 数据返回类型别名, 默认别名是类名
  type-aliases-package: com.xz.seckill.pojo
#  configuration:
#    default-executor-type: BATCH

### Mybatis SQL 打印 (方法接口所在的包, 不是 Mapper.xml 所在的包)
logging:
  level:
    com.xz.seckill.mapper: debug

